////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : My2To4Decoder.vf
// /___/   /\     Timestamp : 03/19/2023 19:44:07
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3a -verilog "D:/Polytech/Xilinix Proj/Decoder/My2To4Decoder.vf" -w "D:/Polytech/Xilinix Proj/Decoder/My2To4Decoder.sch"
//Design Name: My2To4Decoder
//Device: spartan3a
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module IBUF4_HXILINX_My2To4Decoder (O0, O1, O2, O3, I0, I1, I2, I3);
    

   output O0;
   output O1;
   output O2;
   output O3;

   input I0;
   input I1;
   input I2;
   input I3;

assign O0 = I0;
assign O1 = I1;
assign O2 = I2;
assign O3 = I3;

endmodule
`timescale 1ns / 1ps

module My2To4Decoder(IN_0, 
                     IN_1, 
                     IN_2, 
                     IN_3, 
                     OUT_0, 
                     OUT_1, 
                     OUT_2, 
                     OUT_3, 
                     OUT_4, 
                     OUT_5);

    input IN_0;
    input IN_1;
    input IN_2;
    input IN_3;
   output OUT_0;
   output OUT_1;
   output OUT_2;
   output OUT_3;
   output OUT_4;
   output OUT_5;
   
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_42;
   wire XLXN_44;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_57;
   wire XLXN_59;
   wire XLXN_61;
   wire XLXN_64;
   wire XLXN_67;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_75;
   wire XLXN_77;
   wire XLXN_78;
   wire XLXN_79;
   wire XLXN_80;
   wire XLXN_101;
   
   AND3  XLXI_24 (.I0(XLXN_44), 
                 .I1(XLXN_42), 
                 .I2(XLXN_101), 
                 .O(XLXN_47));
   AND3  XLXI_25 (.I0(XLXN_38), 
                 .I1(XLXN_44), 
                 .I2(XLXN_101), 
                 .O(XLXN_48));
   AND3  XLXI_34 (.I0(XLXN_37), 
                 .I1(XLXN_42), 
                 .I2(XLXN_80), 
                 .O(XLXN_57));
   OR4  XLXI_35 (.I0(XLXN_47), 
                .I1(XLXN_48), 
                .I2(XLXN_57), 
                .I3(XLXN_59), 
                .O(XLXN_64));
   AND4  XLXI_36 (.I0(XLXN_80), 
                 .I1(XLXN_36), 
                 .I2(XLXN_44), 
                 .I3(XLXN_61), 
                 .O(XLXN_59));
   AND4  XLXI_37 (.I0(XLXN_101), 
                 .I1(XLXN_42), 
                 .I2(XLXN_44), 
                 .I3(XLXN_38), 
                 .O(XLXN_67));
   AND4  XLXI_38 (.I0(XLXN_80), 
                 .I1(XLXN_36), 
                 .I2(XLXN_37), 
                 .I3(XLXN_38), 
                 .O(XLXN_70));
   AND4  XLXI_39 (.I0(XLXN_101), 
                 .I1(XLXN_42), 
                 .I2(XLXN_44), 
                 .I3(XLXN_61), 
                 .O(XLXN_71));
   OR2  XLXI_40 (.I0(XLXN_71), 
                .I1(XLXN_70), 
                .O(XLXN_72));
   AND3  XLXI_41 (.I0(XLXN_38), 
                 .I1(XLXN_37), 
                 .I2(XLXN_80), 
                 .O(XLXN_75));
   AND4  XLXI_42 (.I0(XLXN_101), 
                 .I1(XLXN_42), 
                 .I2(XLXN_37), 
                 .I3(XLXN_61), 
                 .O(XLXN_77));
   OR2  XLXI_43 (.I0(XLXN_77), 
                .I1(XLXN_75), 
                .O(XLXN_78));
   (* HU_SET = "XLXI_70_0" *) 
   IBUF4_HXILINX_My2To4Decoder  XLXI_70 (.I0(IN_0), 
                                        .I1(IN_1), 
                                        .I2(IN_2), 
                                        .I3(IN_3), 
                                        .O0(XLXN_80), 
                                        .O1(XLXN_36), 
                                        .O2(XLXN_37), 
                                        .O3(XLXN_38));
   INV  XLXI_72 (.I(XLXN_80), 
                .O(XLXN_101));
   INV  XLXI_76 (.I(XLXN_36), 
                .O(XLXN_42));
   INV  XLXI_77 (.I(XLXN_37), 
                .O(XLXN_44));
   INV  XLXI_78 (.I(XLXN_38), 
                .O(XLXN_61));
   (* IOSTANDARD = "DEFAULT" *) (* SLEW = "SLOW" *) (* DRIVE = "12" *) 
   OBUF  XLXI_79 (.I(XLXN_64), 
                 .O(OUT_0));
   (* IOSTANDARD = "DEFAULT" *) (* SLEW = "SLOW" *) (* DRIVE = "12" *) 
   OBUF  XLXI_80 (.I(XLXN_80), 
                 .O(OUT_1));
   (* IOSTANDARD = "DEFAULT" *) (* SLEW = "SLOW" *) (* DRIVE = "12" *) 
   OBUF  XLXI_81 (.I(XLXN_67), 
                 .O(OUT_2));
   (* IOSTANDARD = "DEFAULT" *) (* SLEW = "SLOW" *) (* DRIVE = "12" *) 
   OBUF  XLXI_82 (.I(XLXN_72), 
                 .O(OUT_3));
   (* IOSTANDARD = "DEFAULT" *) (* SLEW = "SLOW" *) (* DRIVE = "12" *) 
   OBUF  XLXI_83 (.I(XLXN_78), 
                 .O(OUT_4));
   (* IOSTANDARD = "DEFAULT" *) (* SLEW = "SLOW" *) (* DRIVE = "12" *) 
   OBUF  XLXI_84 (.I(XLXN_79), 
                 .O(OUT_5));
   OR3  XLXI_89 (.I0(XLXN_36), 
                .I1(XLXN_37), 
                .I2(XLXN_101), 
                .O(XLXN_79));
endmodule
